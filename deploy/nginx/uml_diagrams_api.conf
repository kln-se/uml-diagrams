# ------------------------------
# Map Configuration
# ------------------------------
# See: https://grafana.com/tutorials/run-grafana-behind-a-proxy/
# This is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# Maps HTTP status codes to log levels for structured logging
# See: https://nginx.org/en/docs/http/ngx_http_log_module.html
map $status $log_level {
    ~^[23] info;
    ~^4 warn;
    ~^5 error;
    default unknown;
}

# Maps log levels to whether they should be logged
map $log_level $is_logged {
    ~info 1;
    ~warn 1;
    ~error 1;
    default 1;
}

upstream grafana {
    server uml-diagrams-grafana:3000;
}

# ------------------------------
# Logs
# ------------------------------
log_format verbose_json escape=json '{'
    '"level": "$log_level", '
    '"msec": "$msec", '
    '"request_id": "$request_id", '
    '"remote_addr": "$remote_addr", '
    '"time_local": "$time_local", '
    '"request": "$request", '
    '"request_uri": "$request_uri", '
    '"request_method": "$request_method", '
    '"status": "$status", '
    '"body_bytes_sent": "$body_bytes_sent", '
    '"http_referer": "$http_referer", '
    '"http_user_agent": "$http_user_agent", '
    '"http_x_forwarded_for": "$http_x_forwarded_for", '
    '"http_host": "$http_host", '
    '"request_time": "$request_time", '
    '"upstream": "$upstream_addr", '
    '"upstream_response_time": "$upstream_response_time"'
'}';

# Disable default access log (to avoid duplicate logs)
access_log off;


# ------------------------------
# Server Configuration
# ------------------------------
server {
    listen 80;

    # Enable logging within server
    access_log /dev/stdout verbose_json if=$is_logged;

    # Proxy api requests to the 'uml-diagrams-api' container to port 8000, listened by Gunicorn
    location /api/ {
        # Set the Host header to the original Host header of the client,
        # allowing the proxied server to handle Virtual Hosts correctly.
        proxy_set_header Host $http_host;
        proxy_pass http://uml-diagrams-api:8000/api/;
    }

    # Proxy admin panel requests to the 'uml-diagrams-api' container also
    location /admin/ {
        proxy_set_header Host $http_host;
        proxy_pass http://uml-diagrams-api:8000/admin/;
    }

    # Serve static files & frontend
    location / {
        alias /staticfiles/;
        index index.html;
    }

    # Proxy grafana requests to the 'uml-diagrams-grafana' container
    # See: https://grafana.com/tutorials/run-grafana-behind-a-proxy/
    location /grafana/ {
        proxy_set_header Host $host;
        proxy_pass http://uml-diagrams-grafana:3000/;
    }

    # Proxy Grafana Live WebSocket connections
    # See: https://grafana.com/tutorials/run-grafana-behind-a-proxy/
    location /grafana/api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_pass http://uml-diagrams-grafana:3000/api/live/;
    }
}
