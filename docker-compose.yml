name: uml-diagrams

volumes:
    pg_db_data:
    static:

networks:
    net:

services:
    postgres:
        container_name: uml-diagrams-postgres
        build: ./deploy/db/
        env_file: .env
        volumes:
            - pg_db_data:/var/lib/postgresql/data
        networks:
            - net
        restart: unless-stopped
        ports:
            - "5435:5432"
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
            start_period: 10s
            interval: 5s
            timeout: 5s
            retries: 3

    api:
        container_name: uml-diagrams-api
        build: ./
        image: uml-diagrams-api:1.15.2-dev
        env_file: .env
        environment:
            - DB_HOST=uml-diagrams-postgres
            - DJANGO_DEBUG_MODE=False
        volumes:
            - static:/app/staticfiles
        networks:
            - net
        restart: unless-stopped
        healthcheck:
            test: [ "CMD-SHELL", "curl -f -I http://localhost:8000/health-check/" ]
            start_period: 10s
            interval: 5s
            timeout: 5s
            retries: 3
        depends_on:
            postgres:
                condition: service_healthy

    nginx:
        container_name: uml-diagrams-nginx
        build: ./deploy/nginx/
        volumes:
            - static:/staticfiles
        networks:
            - net
        ports:
            - "8081:80"
        restart: unless-stopped
        depends_on:
            api:
                condition: service_healthy

    frontend:
        container_name: uml-diagrams-frontend
        image: venalum/uml_frontend:dev8
        env_file: .env
        volumes:
            - static:/app/staticfiles/dist
        command: npm run build && exit 0
        networks:
            - net
        depends_on:
            api:
                condition: service_healthy
